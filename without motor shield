#include <NewPing.h>

#define TRIG_PIN 10
#define ECHO_PIN 11
#define MAX_DISTANCE 100

#define IN1 2
#define IN2 3
#define IN3 4
#define IN4 5
#define ENA 6
#define ENB 9

NewPing sonar(TRIG_PIN, ECHO_PIN, MAX_DISTANCE);

unsigned long previousMillis = 0;
const long loopInterval = 50;

unsigned long reactionStartTime = 0;
bool reacting = false;

void setup() {
  Serial.begin(9600);
  
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  pinMode(ENA, OUTPUT);
  pinMode(ENB, OUTPUT);
  
  analogWrite(ENA, 200); // Speed control
  analogWrite(ENB, 200);
}

void loop() {
  unsigned long currentMillis = millis();

  if (currentMillis - previousMillis >= loopInterval && !reacting) {
    previousMillis = currentMillis;

    int distance = sonar.ping_cm();
    Serial.print("Distance: ");
    Serial.println(distance);

    if (distance == 0) {
      stopMotors();
      return;
    }

    if (distance > 0 && distance < 15) {
      reacting = true;
      reactionStartTime = currentMillis;
      moveBackward();
    } else {
      moveForward();
    }
  }

  if (reacting) {
    unsigned long elapsed = currentMillis - reactionStartTime;

    if (elapsed > 100 && elapsed <= 250) {
      turnRight();
    } else if (elapsed > 250) {
      reacting = false;
    }
  }
}

// Motor movement functions

void moveForward() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
}

void moveBackward() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
}

void turnRight() {
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
}

void stopMotors() {
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);
}
